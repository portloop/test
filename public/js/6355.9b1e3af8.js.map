{"version":3,"file":"js/6355.9b1e3af8.js","mappings":"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","sources":["webpack://admin/./node_modules/@codemirror/legacy-modes/mode/nginx.js"],"sourcesContent":["function words(str) {\n  var obj = {}, words = str.split(\" \");\n  for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n  return obj;\n}\n\nvar keywords = words(\n  /* ngxDirectiveControl */ \"break return rewrite set\" +\n    /* ngxDirective */ \" accept_mutex accept_mutex_delay access_log add_after_body add_before_body add_header addition_types aio alias allow ancient_browser ancient_browser_value auth_basic auth_basic_user_file auth_http auth_http_header auth_http_timeout autoindex autoindex_exact_size autoindex_localtime charset charset_types client_body_buffer_size client_body_in_file_only client_body_in_single_buffer client_body_temp_path client_body_timeout client_header_buffer_size client_header_timeout client_max_body_size connection_pool_size create_full_put_path daemon dav_access dav_methods debug_connection debug_points default_type degradation degrade deny devpoll_changes devpoll_events directio directio_alignment empty_gif env epoll_events error_log eventport_events expires fastcgi_bind fastcgi_buffer_size fastcgi_buffers fastcgi_busy_buffers_size fastcgi_cache fastcgi_cache_key fastcgi_cache_methods fastcgi_cache_min_uses fastcgi_cache_path fastcgi_cache_use_stale fastcgi_cache_valid fastcgi_catch_stderr fastcgi_connect_timeout fastcgi_hide_header fastcgi_ignore_client_abort fastcgi_ignore_headers fastcgi_index fastcgi_intercept_errors fastcgi_max_temp_file_size fastcgi_next_upstream fastcgi_param fastcgi_pass_header fastcgi_pass_request_body fastcgi_pass_request_headers fastcgi_read_timeout fastcgi_send_lowat fastcgi_send_timeout fastcgi_split_path_info fastcgi_store fastcgi_store_access fastcgi_temp_file_write_size fastcgi_temp_path fastcgi_upstream_fail_timeout fastcgi_upstream_max_fails flv geoip_city geoip_country google_perftools_profiles gzip gzip_buffers gzip_comp_level gzip_disable gzip_hash gzip_http_version gzip_min_length gzip_no_buffer gzip_proxied gzip_static gzip_types gzip_vary gzip_window if_modified_since ignore_invalid_headers image_filter image_filter_buffer image_filter_jpeg_quality image_filter_transparency imap_auth imap_capabilities imap_client_buffer index ip_hash keepalive_requests keepalive_timeout kqueue_changes kqueue_events large_client_header_buffers limit_conn limit_conn_log_level limit_rate limit_rate_after limit_req limit_req_log_level limit_req_zone limit_zone lingering_time lingering_timeout lock_file log_format log_not_found log_subrequest map_hash_bucket_size map_hash_max_size master_process memcached_bind memcached_buffer_size memcached_connect_timeout memcached_next_upstream memcached_read_timeout memcached_send_timeout memcached_upstream_fail_timeout memcached_upstream_max_fails merge_slashes min_delete_depth modern_browser modern_browser_value msie_padding msie_refresh multi_accept open_file_cache open_file_cache_errors open_file_cache_events open_file_cache_min_uses open_file_cache_valid open_log_file_cache output_buffers override_charset perl perl_modules perl_require perl_set pid pop3_auth pop3_capabilities port_in_redirect postpone_gzipping postpone_output protocol proxy proxy_bind proxy_buffer proxy_buffer_size proxy_buffering proxy_buffers proxy_busy_buffers_size proxy_cache proxy_cache_key proxy_cache_methods proxy_cache_min_uses proxy_cache_path proxy_cache_use_stale proxy_cache_valid proxy_connect_timeout proxy_headers_hash_bucket_size proxy_headers_hash_max_size proxy_hide_header proxy_ignore_client_abort proxy_ignore_headers proxy_intercept_errors proxy_max_temp_file_size proxy_method proxy_next_upstream proxy_pass_error_message proxy_pass_header proxy_pass_request_body proxy_pass_request_headers proxy_read_timeout proxy_redirect proxy_send_lowat proxy_send_timeout proxy_set_body proxy_set_header proxy_ssl_session_reuse proxy_store proxy_store_access proxy_temp_file_write_size proxy_temp_path proxy_timeout proxy_upstream_fail_timeout proxy_upstream_max_fails random_index read_ahead real_ip_header recursive_error_pages request_pool_size reset_timedout_connection resolver resolver_timeout rewrite_log rtsig_overflow_events rtsig_overflow_test rtsig_overflow_threshold rtsig_signo satisfy secure_link_secret send_lowat send_timeout sendfile sendfile_max_chunk server_name_in_redirect server_names_hash_bucket_size server_names_hash_max_size server_tokens set_real_ip_from smtp_auth smtp_capabilities smtp_client_buffer smtp_greeting_delay so_keepalive source_charset ssi ssi_ignore_recycled_buffers ssi_min_file_chunk ssi_silent_errors ssi_types ssi_value_length ssl ssl_certificate ssl_certificate_key ssl_ciphers ssl_client_certificate ssl_crl ssl_dhparam ssl_engine ssl_prefer_server_ciphers ssl_protocols ssl_session_cache ssl_session_timeout ssl_verify_client ssl_verify_depth starttls stub_status sub_filter sub_filter_once sub_filter_types tcp_nodelay tcp_nopush thread_stack_size timeout timer_resolution types_hash_bucket_size types_hash_max_size underscores_in_headers uninitialized_variable_warn use user userid userid_domain userid_expires userid_mark userid_name userid_p3p userid_path userid_service valid_referers variables_hash_bucket_size variables_hash_max_size worker_connections worker_cpu_affinity worker_priority worker_processes worker_rlimit_core worker_rlimit_nofile worker_rlimit_sigpending worker_threads working_directory xclient xml_entities xslt_stylesheet xslt_typesdrew@li229-23\"\n);\n\nvar keywords_block = words(\n  /* ngxDirectiveBlock */ \"http mail events server types location upstream charset_map limit_except if geo map\"\n);\n\nvar keywords_important = words(\n  /* ngxDirectiveImportant */ \"include root server server_name listen internal proxy_pass memcached_pass fastcgi_pass try_files\"\n);\n\nvar type;\nfunction ret(style, tp) {type = tp; return style;}\n\nfunction tokenBase(stream, state) {\n\n\n  stream.eatWhile(/[\\w\\$_]/);\n\n  var cur = stream.current();\n\n\n  if (keywords.propertyIsEnumerable(cur)) {\n    return \"keyword\";\n  }\n  else if (keywords_block.propertyIsEnumerable(cur)) {\n    return \"controlKeyword\";\n  }\n  else if (keywords_important.propertyIsEnumerable(cur)) {\n    return \"controlKeyword\";\n  }\n  /**/\n\n  var ch = stream.next();\n  if (ch == \"@\") {stream.eatWhile(/[\\w\\\\\\-]/); return ret(\"meta\", stream.current());}\n  else if (ch == \"/\" && stream.eat(\"*\")) {\n    state.tokenize = tokenCComment;\n    return tokenCComment(stream, state);\n  }\n  else if (ch == \"<\" && stream.eat(\"!\")) {\n    state.tokenize = tokenSGMLComment;\n    return tokenSGMLComment(stream, state);\n  }\n  else if (ch == \"=\") ret(null, \"compare\");\n  else if ((ch == \"~\" || ch == \"|\") && stream.eat(\"=\")) return ret(null, \"compare\");\n  else if (ch == \"\\\"\" || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n  else if (ch == \"#\") {\n    stream.skipToEnd();\n    return ret(\"comment\", \"comment\");\n  }\n  else if (ch == \"!\") {\n    stream.match(/^\\s*\\w*/);\n    return ret(\"keyword\", \"important\");\n  }\n  else if (/\\d/.test(ch)) {\n    stream.eatWhile(/[\\w.%]/);\n    return ret(\"number\", \"unit\");\n  }\n  else if (/[,.+>*\\/]/.test(ch)) {\n    return ret(null, \"select-op\");\n  }\n  else if (/[;{}:\\[\\]]/.test(ch)) {\n    return ret(null, ch);\n  }\n  else {\n    stream.eatWhile(/[\\w\\\\\\-]/);\n    return ret(\"variable\", \"variable\");\n  }\n}\n\nfunction tokenCComment(stream, state) {\n  var maybeEnd = false, ch;\n  while ((ch = stream.next()) != null) {\n    if (maybeEnd && ch == \"/\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenSGMLComment(stream, state) {\n  var dashes = 0, ch;\n  while ((ch = stream.next()) != null) {\n    if (dashes >= 2 && ch == \">\") {\n      state.tokenize = tokenBase;\n      break;\n    }\n    dashes = (ch == \"-\") ? dashes + 1 : 0;\n  }\n  return ret(\"comment\", \"comment\");\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch == quote && !escaped)\n        break;\n      escaped = !escaped && ch == \"\\\\\";\n    }\n    if (!escaped) state.tokenize = tokenBase;\n    return ret(\"string\", \"string\");\n  };\n}\n\nexport const nginx = {\n  name: \"nginx\",\n  startState: function() {\n    return {tokenize: tokenBase,\n            baseIndent: 0,\n            stack: []};\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    type = null;\n    var style = state.tokenize(stream, state);\n\n    var context = state.stack[state.stack.length-1];\n    if (type == \"hash\" && context == \"rule\") style = \"atom\";\n    else if (style == \"variable\") {\n      if (context == \"rule\") style = \"number\";\n      else if (!context || context == \"@media{\") style = \"tag\";\n    }\n\n    if (context == \"rule\" && /^[\\{\\};]$/.test(type))\n      state.stack.pop();\n    if (type == \"{\") {\n      if (context == \"@media\") state.stack[state.stack.length-1] = \"@media{\";\n      else state.stack.push(\"{\");\n    }\n    else if (type == \"}\") state.stack.pop();\n    else if (type == \"@media\") state.stack.push(\"@media\");\n    else if (context == \"{\" && type != \"comment\") state.stack.push(\"rule\");\n    return style;\n  },\n\n  indent: function(state, textAfter, cx) {\n    var n = state.stack.length;\n    if (/^\\}/.test(textAfter))\n      n -= state.stack[state.stack.length-1] == \"rule\" ? 2 : 1;\n    return state.baseIndent + n * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*\\}$/\n  }\n};\n"],"names":["words","str","obj","split","i","length","type","keywords","keywords_block","keywords_important","ret","style","tp","tokenBase","stream","state","eatWhile","cur","current","propertyIsEnumerable","ch","next","eat","tokenize","tokenCComment","tokenSGMLComment","tokenString","skipToEnd","match","test","maybeEnd","dashes","quote","escaped","nginx","name","startState","baseIndent","stack","token","eatSpace","context","pop","push","indent","textAfter","cx","n","unit","languageData","indentOnInput"],"sourceRoot":""}