{"version":3,"file":"js/7637.b9e139d3.js","mappings":"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","sources":["webpack://admin/./node_modules/@lezer/xml/dist/index.js","webpack://admin/./node_modules/@codemirror/lang-xml/dist/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    for (let endPos = 0, len = 0;; len++) {\n      if (input.next < 0) {\n        if (len) input.acceptToken(type);\n        break\n      } \n      if (input.next == end.charCodeAt(endPos)) {\n        endPos++;\n        if (endPos == end.length) {\n          if (len >= end.length) input.acceptToken(type, 1 - end.length);\n          break\n        }\n      } else {\n        endPos = input.next == end.charCodeAt(0) ? 1 : 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"IX~R!XOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs'ssv$nvw(Zw}$n}!O*l!O!P$n!P!Q,{!Q![$n![!].e!]!^$n!^!_1v!_!`Cz!`!aDm!a!bE`!b!c$n!c!}.e!}#P$n#P#QFx#Q#R$n#R#S.e#S#T$n#T#o.e#o%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U$n4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$nX$uWVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nP%dTVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_P%vP;=`<%l%_W&OT{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yW&bP;=`<%l%yX&hP;=`<%l$n_&t_VP{WyUOX$nXY&kYZ&kZ]$n]^&k^p$npq&kqr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ'zTzYVPOv%_w!^%_!_;'S%_;'S;=`%s<%lO%_~(^VOp(sqs(sst)ht!](s!^;'S(s;'S;=`)b<%lO(s~(vVOp(sqs(st!](s!]!^)]!^;'S(s;'S;=`)b<%lO(s~)bOW~~)eP;=`<%l(s~)kTOp)zq!])z!^;'S)z;'S;=`*f<%lO)z~)}UOp)zq!])z!]!^*a!^;'S)z;'S;=`*f<%lO)z~*fOX~~*iP;=`<%l)zZ*sYVP{WOr$nrs%_sv$nw}$n}!O+c!O!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZ+jYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a,Y!a;'S$n;'S;=`&e<%lO$nZ,cW|QVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n]-SYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!a-r!a;'S$n;'S;=`&e<%lO$n]-{WdSVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_.p!O`S^QVP{WOr$nrs%_sv$nw}$n}!O.e!O!P.e!P!Q$n!Q![.e![!].e!]!^$n!^!_%y!_!c$n!c!}.e!}#R$n#R#S.e#S#T$n#T#o.e#o$}$n$}%O.e%O%W$n%W%o.e%o%p$n%p&a.e&a&b$n&b1p.e1p4U.e4U4d.e4d4e$n4e$IS.e$IS$I`$n$I`$Ib.e$Ib$Je$n$Je$Jg.e$Jg$Kh$n$Kh%#t.e%#t&/x$n&/x&Et.e&Et&FV$n&FV;'S.e;'S;:j1p;:j;=`&e<%l?&r$n?&r?Ah.e?Ah?BY$n?BY?Mn.e?MnO$n_1sP;=`<%l.eX1{W{WOq%yqr2esv%yw!a%y!a!bCd!b;'S%y;'S;=`&_<%lO%yX2j]{WOr%ysv%yw}%y}!O3c!O!f%y!f!g4e!g!}%y!}#O9t#O#W%y#W#X@Q#X;'S%y;'S;=`&_<%lO%yX3hV{WOr%ysv%yw}%y}!O3}!O;'S%y;'S;=`&_<%lO%yX4UT}P{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX4jV{WOr%ysv%yw!q%y!q!r5P!r;'S%y;'S;=`&_<%lO%yX5UV{WOr%ysv%yw!e%y!e!f5k!f;'S%y;'S;=`&_<%lO%yX5pV{WOr%ysv%yw!v%y!v!w6V!w;'S%y;'S;=`&_<%lO%yX6[V{WOr%ysv%yw!{%y!{!|6q!|;'S%y;'S;=`&_<%lO%yX6vV{WOr%ysv%yw!r%y!r!s7]!s;'S%y;'S;=`&_<%lO%yX7bV{WOr%ysv%yw!g%y!g!h7w!h;'S%y;'S;=`&_<%lO%yX7|X{WOr7wrs8isv7wvw8iw!`7w!`!a9W!a;'S7w;'S;=`9n<%lO7wP8lTO!`8i!`!a8{!a;'S8i;'S;=`9Q<%lO8iP9QOiPP9TP;=`<%l8iX9_TiP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yX9qP;=`<%l7wX9yX{WOr%ysv%yw!e%y!e!f:f!f#V%y#V#W=t#W;'S%y;'S;=`&_<%lO%yX:kV{WOr%ysv%yw!f%y!f!g;Q!g;'S%y;'S;=`&_<%lO%yX;VV{WOr%ysv%yw!c%y!c!d;l!d;'S%y;'S;=`&_<%lO%yX;qV{WOr%ysv%yw!v%y!v!w<W!w;'S%y;'S;=`&_<%lO%yX<]V{WOr%ysv%yw!c%y!c!d<r!d;'S%y;'S;=`&_<%lO%yX<wV{WOr%ysv%yw!}%y!}#O=^#O;'S%y;'S;=`&_<%lO%yX=eT{WxPOr%ysv%yw;'S%y;'S;=`&_<%lO%yX=yV{WOr%ysv%yw#W%y#W#X>`#X;'S%y;'S;=`&_<%lO%yX>eV{WOr%ysv%yw#T%y#T#U>z#U;'S%y;'S;=`&_<%lO%yX?PV{WOr%ysv%yw#h%y#h#i?f#i;'S%y;'S;=`&_<%lO%yX?kV{WOr%ysv%yw#T%y#T#U<r#U;'S%y;'S;=`&_<%lO%yX@VV{WOr%ysv%yw#c%y#c#d@l#d;'S%y;'S;=`&_<%lO%yX@qV{WOr%ysv%yw#V%y#V#WAW#W;'S%y;'S;=`&_<%lO%yXA]V{WOr%ysv%yw#h%y#h#iAr#i;'S%y;'S;=`&_<%lO%yXAwV{WOr%ysv%yw#m%y#m#nB^#n;'S%y;'S;=`&_<%lO%yXBcV{WOr%ysv%yw#d%y#d#eBx#e;'S%y;'S;=`&_<%lO%yXB}V{WOr%ysv%yw#X%y#X#Y7w#Y;'S%y;'S;=`&_<%lO%yXCkT!PP{WOr%ysv%yw;'S%y;'S;=`&_<%lO%yZDTWaQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n_DvW[UVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZEgYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aFV!a;'S$n;'S;=`&e<%lO$nZF`W!OQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$nZGPYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_#P$n#P#QGo#Q;'S$n;'S;=`&e<%lO$nZGvYVP{WOr$nrs%_sv$nw!^$n!^!_%y!_!`$n!`!aHf!a;'S$n;'S;=`&e<%lO$nZHoWwQVP{WOr$nrs%_sv$nw!^$n!^!_%y!_;'S$n;'S;=`&e<%lO$n\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, bracketMatchingHandle, LanguageSupport } from '@codemirror/language';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\n/**\nCreate a completion source for the given schema.\n*/\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                validFor: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                validFor: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                validFor: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                validFor: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"xml\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            }),\n            /*@__PURE__*/bracketMatchingHandle.add({\n                \"OpenTag CloseTag\": node => node.getChild(\"TagName\")\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    return new LanguageSupport(xmlLanguage, xmlLanguage.data.of({\n        autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n    }));\n}\n\nexport { completeFromSchema, xml, xmlLanguage };\n"],"names":["StartTag","StartCloseTag","MissingCloseTag","mismatchedStartCloseTag","incompleteStartCloseTag","commentContent$1","piContent$1","cdataContent$1","Element","OpenTag","nameChar","ch","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","pos","peek","name","next","String","fromCharCode","ElementContext","parent","this","hash","i","length","charCodeAt","elementContext","ContextTracker","start","shift","context","term","stack","reduce","reuse","node","_stack","type","id","strict","startTag","ExternalTokenizer","advance","acceptToken","cx","contextual","scanTo","end","endPos","len","commentContent","piContent","cdataContent","xmlHighlighting","styleTags","Text","tags","content","angleBracket","TagName","tagName","invalid","AttributeName","attributeName","AttributeValue","attributeValue","Is","definitionOperator","character","Comment","blockComment","ProcessingInst","processingInstruction","DoctypeDecl","documentMeta","Cdata","special","string","parser","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","doc","tag","getChild","sliceString","from","to","elementName","tree","firstChild","attrName","attr","getChildren","find","a","findParentElement","cur","findLocation","state","_a","at","syntaxTree","resolveInner","inTag","lastChild","isError","elt","before","childBefore","constructor","spec","attrs","attrValues","children","completion","Object","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","test","completeFromSchema","eltSpecs","attrSpecs","allAttrs","globalAttrs","create","push","global","values","allElements","topElements","byName","attrVals","attributes","concat","top","loc","explicit","parentName","options","validFor","closing","last","e","openTag","sliceDoc","xmlLanguage","LRLanguage","define","configure","props","indentNodeProp","add","closed","textAfter","lineIndent","unit","column","foldNodeProp","subtree","first","bracketMatchingHandle","languageData","commentTokens","block","open","close","indentOnInput","xml","conf","LanguageSupport","data","of","autocomplete","elements"],"sourceRoot":""}